
git clone git://github.com/jpetazzo/orchestration-workshop

# [8] ssh from node1 to another node

ssh docker@node1

# 17
docker-compose up rng

# in another window:
curl localhost:8001

# Get 10 bytes of random data: 
curl localhost:8001/10

# in yet another window
docker-compose up hasher

# in yet ANOTHER window
# [23] Check that the hasher service is alive: 
curl localhost:8002  -> HASHER running on 4685f681c78d

curl \
  -H "Content-type: application/octet-stream" \
  --data-binary hello \
  localhost:8002

-> 2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824

# [23] Check that it computed the right hash: 

$ echo -n hello | sha256sum
2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824  -

# [24] stop services
docker-compose stop

# [25] start all services
docker-compose up

# interrupt with ctrl-C
^C

# restart services
docker-compose up

# [27] run top to see CPU and memory usage (you should see idle cycles)
top

# [27] see I/O usage (si/so/bi/bo) (the 4 numbers should be almost zero, except bo for logging)
vmstat 3


# [28] Start 9 more worker containers: 
docker-compose scale worker=10

# [28] Check the aggregated logs of those containers: 
docker-compose logs worker

# [32] Scale back the worker service to zero: 
docker-compose scale worker=0

# [32] Open a new SSH connection and check the latency of rng: 
httping localhost:8001

# [32] Open a new SSH conection and do the same for hasher: 
httping localhost:8002

# [33] Create the first worker instance: 
docker-compose scale worker=1

# [34] add workers and see what happens
docker-compose scale worker=2

# [52] Replace the rng service with multiple copies of it:
mv docker-compose.yml docker-compose.yml-orig
mv docker-compose.yml-scaled-rng docker-compose.yml

# listen to port 80 and balance traffic on www1:1234 + www2:2345
docker run -d -p 80 jpetazzo/hamba 80 www1:1234 www2:2345

# [54] Add the following section to the Compose file:

    rng:
        image: jpetazzo/hamba
        links:
          - rng1
          - rng2
          - rng3
        command: 80 rng1 80 rng2 80 rng3 80
        ports:
          - "8001:80"

# [55] Start the new services: 
docker-compose up -d

# [55] Check worker logs: 
docker-compose logs worker

# [55] Check load balancer logs: 
docker-compose logs rng
